首先由我来为大家介绍一下什么是mycat
mycat能做什么
mycat的原理

mycat是一个数据库中间件
中间件：是一类连接软件组织和应用的计算机软件，以便于软件各部件之间的沟通。
比如我们使用的Tomcat就是一个web中间件,它连接客户端与服务器

一端连接数据库一端连接java应用的计算机软件

在我们传统的Java应用中,会面临以下三种问题
传统Java应用与数据库直接相连,使得java应用于数据库紧耦合

java应用我们是会放在互联网上,只要放在互联网上就会面临
高访问量高并发的问题,我们需要去解决

同时对数据的读写请求数据量是不一致的,往往我们的读操作会
远远大于我们的写操作,为了负载均衡我们需要将其分流

在我们传统的Java应用中,应用与数据库直接相连,配置文件在应用中.只要数据库崩溃
我们在为其更换使用的数据库时需要修改其配置文件,这就产生了两者的紧耦合

如果我们在其中添加一个中间件即mycat,在数据库产生问题时边不用修改java应用
这样就解开了两者的紧耦合.

为了解决数据的读写请求数据量是不一致,我们需要用读写分离来使得数据库负载均衡
我们需要在java应用中去区分读写操作,需要写程序进行判断,并且这些判断适和java应用
合在一起的,只要涉及改变就会需要修改大量的相关操作,这样是十分不好的.

使用mycat过后所有与数据库相关的配置信息都不需要写在java程序中了,也不需要区分,
可以把mycat当成一个巨大的数据库,拥有所有的表便可以了,所有的操作都变的简单起来了.
java程序只需要把sql语句传给mycat,让mycat去分析该在哪里进行读写便可了


数据库中的数据量不一定是可控的，在未进行分库分表的情况下，随着时间和业务的发展，
库中的表会越来越多，表中的数据量也会越来越大，相应地，数据操作，增删改查的开销也会越来越大；
另外，由于无法进行分布式式部署，而一台服务器的资源（CPU、磁盘、内存、IO等）是有限的，
最终数据库所能承载的数据量、数据处理能力都将遭遇瓶颈。
所以我们需要要分库分表操作.
当我们的数据库达到处理瓶颈时我们可以进行分库,
将表按照功能模块、关系密切程度划分出来，部署到不同的库上
例如，我们会建立定义数据库workDB、商品数据库payDB、用户数据库userDB、
日志数据库logDB等，分别用于存储项目数据定义表、商品定义表、用户数据表、日志数据表等
这样我们的数据库服务器的硬件资源便可以变得宽松,这样便是垂直拆分

同样的,比如我们一张表的数据达到了千万级,对其进行查询也会遭遇瓶颈,我们对其访问可能会访问
的非常慢,甚至根本找不到数据,这里便可以用到水平拆分.
我们可以把该表的数据按照某种规则，例如userID散列，进行划分，
然后存储到多个结构相同的表，和不同的库上。
例如，我们的userDB中的用户数据表中，每一个表的数据量都很大，
就可以把userDB切分为结构相同的多个userDB：part0DB、part1DB等，
再将userDB上的用户数据表userTable，切分为很多userTable：userTable0、userTable1等，
然后将这些表按照一定的规则存储到多个userDB上。

完成这些操作后的所有数据库分库我们便可以同一由mycat来管理,我们的java应用变只用直接
访问mycat便可以了


然后我们来了解一下多数据源整合

 Galera Cluster是一个MySQL多主集群，是一个易于使用的高可用解决方案，
在数据完整性、可扩展性及高性能方面都有可接受的表现。
我们可以用其来存储账单,订单表等关键数据

主从故障切换主从复制,拥有高可用性
可以用来存放一些常规的业务数据

NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，
尤其是大数据应用难题。

mycat也可以对这些数据进行分类管理,存到对应的数据源


mycat虽然能实现这么多功能,但是其原理并不复杂,最为重要的便是"拦截",
它拦截了用户发过来的SQL语句,对语句做了一些特定的分析:比如先检测是否分片
然后再进行路由分析,还有我们的读写分离分析,缓存分析等,再根据制作的数据源
整合的方案,把我们程序发过来的sql语句发给对应的数据源.
数据源完成操作后,再把结果返回给mycat,最后mycat再把结果返回给客户端
这就是mycat的原理.

我们来举个例子,假设我们在对订单做分片操作的时候将我们的订单
分到三个数据节点,dn1,dn2,dn3
我们将来自浙江的订单存到db1,来自上海的订单存在db2,来自北京的订单存到db3
成功分成三片
然后我们这有个请求select * from oders where prov ='zhejiang'
mycat经历解析sql,分片分析,路由分析,读写分离分析和缓存分析后确定了目标数据源
为db1
查询完的结果便返回给mycat,进行结果的合并,整合处理,排序处理,分页处理等再返回
给我们的应用
